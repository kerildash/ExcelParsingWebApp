// <auto-generated />
using System;
using ExcelParsingWebApp.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExcelParsingWebApp.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240827235209_Add relations between entities")]
    partial class Addrelationsbetweenentities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExcelParsingWebApp.Models.Database.AccountDto", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IncomingBalanceAssets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IncomingBalanceLiabilities")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id", "ClassId");

                    b.HasIndex("ClassId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("ExcelParsingWebApp.Models.Database.ClassDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SheetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SheetId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("ExcelParsingWebApp.Models.Database.SheetDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("PeriodInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SheetTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sheets");
                });

            modelBuilder.Entity("ExcelParsingWebApp.Models.Database.AccountDto", b =>
                {
                    b.HasOne("ExcelParsingWebApp.Models.Database.ClassDto", "Class")
                        .WithMany("Accounts")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("ExcelParsingWebApp.Models.Database.ClassDto", b =>
                {
                    b.HasOne("ExcelParsingWebApp.Models.Database.SheetDto", "Sheet")
                        .WithMany("Classes")
                        .HasForeignKey("SheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sheet");
                });

            modelBuilder.Entity("ExcelParsingWebApp.Models.Database.ClassDto", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("ExcelParsingWebApp.Models.Database.SheetDto", b =>
                {
                    b.Navigation("Classes");
                });
#pragma warning restore 612, 618
        }
    }
}
